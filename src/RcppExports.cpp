// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// c_semisupnnmf
Rcpp::List c_semisupnnmf(const arma::mat& A, const unsigned int k, arma::mat W, arma::mat H, arma::umat Wm, arma::umat Hm, const unsigned int max_iter, const double rel_tol, const int n_threads, const int verbose, const bool show_warning, const unsigned int inner_max_iter, const double inner_rel_tol, unsigned int trace);
RcppExport SEXP _semiSupNMF_c_semisupnnmf(SEXP ASEXP, SEXP kSEXP, SEXP WSEXP, SEXP HSEXP, SEXP WmSEXP, SEXP HmSEXP, SEXP max_iterSEXP, SEXP rel_tolSEXP, SEXP n_threadsSEXP, SEXP verboseSEXP, SEXP show_warningSEXP, SEXP inner_max_iterSEXP, SEXP inner_rel_tolSEXP, SEXP traceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type W(WSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type Wm(WmSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type Hm(HmSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type rel_tol(rel_tolSEXP);
    Rcpp::traits::input_parameter< const int >::type n_threads(n_threadsSEXP);
    Rcpp::traits::input_parameter< const int >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool >::type show_warning(show_warningSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type inner_max_iter(inner_max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type inner_rel_tol(inner_rel_tolSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type trace(traceSEXP);
    rcpp_result_gen = Rcpp::wrap(c_semisupnnmf(A, k, W, H, Wm, Hm, max_iter, rel_tol, n_threads, verbose, show_warning, inner_max_iter, inner_rel_tol, trace));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_semiSupNMF_c_semisupnnmf", (DL_FUNC) &_semiSupNMF_c_semisupnnmf, 14},
    {NULL, NULL, 0}
};

RcppExport void R_init_semiSupNMF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
